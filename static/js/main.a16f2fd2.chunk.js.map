{"version":3,"sources":["components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["CardList","robots","Error","SearchBox","searchChange","className","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","robot","filteredRobots","filter","name","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0OAyBeA,EAtBE,SAAC,GAAe,EAAbC,OAEhB,MAAM,IAAIC,MAAM,wBCULC,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACnB,OACE,yBAASC,UAAU,MAAnB,SACE,uBACEA,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCCHK,EARA,SAACC,GACd,OACE,yBAASC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,iBAAkBC,OAAQ,QAAzE,SACGJ,EAAMK,YCkBEC,E,kDApBb,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACXC,UAAU,GAHK,E,qDAOnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG5B,WAEE,OADqBG,KAAKJ,MAAlBC,SAEC,oEAEFG,KAAKX,MAAMK,a,GAjBMQ,aCqDbC,E,kDA/Cb,aAAe,IAAD,8BACZ,gBAQFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAR1C,EAAKZ,MAAQ,CACXhB,OAAQ,GACR0B,YAAa,IAJH,E,qDAcd,WAAqB,IAAD,OAClBG,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAErB,OAAQiC,S,oBAK3C,WAAU,IAAD,OACDC,EAAiBd,KAAKJ,MAAMhB,OAAOmC,QAAO,SAAAF,GAAK,OACnDA,EAAMG,KAAKC,cAAcC,SAAS,EAAKtB,MAAMU,YAAYW,kBAG3D,OAA0B,IAAtBjB,KAAKJ,MAAMhB,OACN,yCAGL,0BAASI,UAAU,KAAnB,UACE,6CACA,cAAC,EAAD,UACE,cAAC,EAAD,CAAWD,aAAciB,KAAKI,mBAEhC,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAUxB,OAAQkC,e,GAvCdZ,aCKHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.a16f2fd2.chunk.js","sourcesContent":["import React from 'react';\r\nimport Card from './Card'\r\n\r\nconst CardList = ({ robots }) => {\r\n  if (true) {\r\n    throw new Error('Ada yang salah bang')\r\n  }\r\n  return (\r\n    <section>\r\n      {\r\n        robots.map(robot => {\r\n          return (\r\n            <Card \r\n              key={robot.id} \r\n              id={robot.id} \r\n              name={robot.name} \r\n              email={robot.email} \r\n            />\r\n          );\r\n        })\r\n      }\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n  return (\r\n    <section className=\"pa2\">\r\n      <input \r\n        className=\"pa3 ba b--green bg-lightest-blue\"\r\n        type=\"search\" \r\n        placeholder=\"search robots\"\r\n        onChange={searchChange}\r\n      />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <section style={{ overflowY: \"scroll\", border: \"2px solid #000\", height: \"77vh\" }}>\r\n      {props.children}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true })\r\n  }\r\n\r\n  render() {\r\n    const { hasError } = this.state;\r\n    if (hasError) {\r\n      return <h1>Oops. Error(s) found. I'll fix it.</h1>\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchfield: '',\r\n    }\r\n    // console.log('constructor')\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value });\r\n    // console.log('onSearchChange');\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then(response => response.json())\r\n      .then(robot => this.setState({ robots: robot })\r\n    )\r\n    // console.log(\"componentDidMount\")\r\n  }\r\n\r\n  render() {\r\n    const filteredRobots = this.state.robots.filter(robot => \r\n      robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n    );\r\n    // console.log(\"render\");\r\n    if (this.state.robots === 0) {\r\n      return <h1>Loading</h1>\r\n    } else {\r\n      return (\r\n        <section className=\"tc\">\r\n          <h1>RoboFriends</h1>\r\n          <ErrorBoundary>\r\n            <SearchBox searchChange={this.onSearchChange} />\r\n          </ErrorBoundary>\r\n          <Scroll>\r\n            <ErrorBoundary>\r\n              <CardList robots={filteredRobots} />\r\n            </ErrorBoundary>\r\n          </Scroll>\r\n        </section>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  // <React.StrictMode></React.StrictMode>,\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}